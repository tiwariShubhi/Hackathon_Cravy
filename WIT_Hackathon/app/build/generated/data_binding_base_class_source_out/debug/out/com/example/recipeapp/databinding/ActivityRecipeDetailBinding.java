// Generated by view binder compiler. Do not edit!
package com.example.recipeapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import com.example.recipeapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRecipeDetailBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView RecipeCourse;

  @NonNull
  public final TextView RecipeCuisine;

  @NonNull
  public final TextView RecipeDuration;

  @NonNull
  public final ImageView RecipeImage;

  @NonNull
  public final TextView RecipeIng;

  @NonNull
  public final TextView RecipeName;

  @NonNull
  public final TextView RecipeServing;

  @NonNull
  public final TextView RecipeSteps;

  @NonNull
  public final CardView cardImage;

  @NonNull
  public final CardView cardIngredients;

  @NonNull
  public final CardView cardName;

  @NonNull
  public final CardView cardSteps;

  @NonNull
  public final Toolbar toolbar1;

  private ActivityRecipeDetailBinding(@NonNull RelativeLayout rootView,
      @NonNull TextView RecipeCourse, @NonNull TextView RecipeCuisine,
      @NonNull TextView RecipeDuration, @NonNull ImageView RecipeImage, @NonNull TextView RecipeIng,
      @NonNull TextView RecipeName, @NonNull TextView RecipeServing, @NonNull TextView RecipeSteps,
      @NonNull CardView cardImage, @NonNull CardView cardIngredients, @NonNull CardView cardName,
      @NonNull CardView cardSteps, @NonNull Toolbar toolbar1) {
    this.rootView = rootView;
    this.RecipeCourse = RecipeCourse;
    this.RecipeCuisine = RecipeCuisine;
    this.RecipeDuration = RecipeDuration;
    this.RecipeImage = RecipeImage;
    this.RecipeIng = RecipeIng;
    this.RecipeName = RecipeName;
    this.RecipeServing = RecipeServing;
    this.RecipeSteps = RecipeSteps;
    this.cardImage = cardImage;
    this.cardIngredients = cardIngredients;
    this.cardName = cardName;
    this.cardSteps = cardSteps;
    this.toolbar1 = toolbar1;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRecipeDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRecipeDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_recipe_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRecipeDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.RecipeCourse;
      TextView RecipeCourse = rootView.findViewById(id);
      if (RecipeCourse == null) {
        break missingId;
      }

      id = R.id.RecipeCuisine;
      TextView RecipeCuisine = rootView.findViewById(id);
      if (RecipeCuisine == null) {
        break missingId;
      }

      id = R.id.RecipeDuration;
      TextView RecipeDuration = rootView.findViewById(id);
      if (RecipeDuration == null) {
        break missingId;
      }

      id = R.id.RecipeImage;
      ImageView RecipeImage = rootView.findViewById(id);
      if (RecipeImage == null) {
        break missingId;
      }

      id = R.id.RecipeIng;
      TextView RecipeIng = rootView.findViewById(id);
      if (RecipeIng == null) {
        break missingId;
      }

      id = R.id.RecipeName;
      TextView RecipeName = rootView.findViewById(id);
      if (RecipeName == null) {
        break missingId;
      }

      id = R.id.RecipeServing;
      TextView RecipeServing = rootView.findViewById(id);
      if (RecipeServing == null) {
        break missingId;
      }

      id = R.id.RecipeSteps;
      TextView RecipeSteps = rootView.findViewById(id);
      if (RecipeSteps == null) {
        break missingId;
      }

      id = R.id.cardImage;
      CardView cardImage = rootView.findViewById(id);
      if (cardImage == null) {
        break missingId;
      }

      id = R.id.cardIngredients;
      CardView cardIngredients = rootView.findViewById(id);
      if (cardIngredients == null) {
        break missingId;
      }

      id = R.id.cardName;
      CardView cardName = rootView.findViewById(id);
      if (cardName == null) {
        break missingId;
      }

      id = R.id.cardSteps;
      CardView cardSteps = rootView.findViewById(id);
      if (cardSteps == null) {
        break missingId;
      }

      id = R.id.toolbar1;
      Toolbar toolbar1 = rootView.findViewById(id);
      if (toolbar1 == null) {
        break missingId;
      }

      return new ActivityRecipeDetailBinding((RelativeLayout) rootView, RecipeCourse, RecipeCuisine,
          RecipeDuration, RecipeImage, RecipeIng, RecipeName, RecipeServing, RecipeSteps, cardImage,
          cardIngredients, cardName, cardSteps, toolbar1);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
