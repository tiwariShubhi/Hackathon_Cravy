// Generated by view binder compiler. Do not edit!
package com.example.recipeapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import com.example.recipeapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RecipeItemBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView RecipeCourse;

  @NonNull
  public final TextView RecipeDuration;

  @NonNull
  public final ImageView RecipeImage;

  @NonNull
  public final TextView RecipeName;

  @NonNull
  public final CardView cardView;

  @NonNull
  public final ImageView imageView;

  private RecipeItemBinding(@NonNull RelativeLayout rootView, @NonNull TextView RecipeCourse,
      @NonNull TextView RecipeDuration, @NonNull ImageView RecipeImage,
      @NonNull TextView RecipeName, @NonNull CardView cardView, @NonNull ImageView imageView) {
    this.rootView = rootView;
    this.RecipeCourse = RecipeCourse;
    this.RecipeDuration = RecipeDuration;
    this.RecipeImage = RecipeImage;
    this.RecipeName = RecipeName;
    this.cardView = cardView;
    this.imageView = imageView;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RecipeItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RecipeItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.recipe_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RecipeItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.RecipeCourse;
      TextView RecipeCourse = rootView.findViewById(id);
      if (RecipeCourse == null) {
        break missingId;
      }

      id = R.id.RecipeDuration;
      TextView RecipeDuration = rootView.findViewById(id);
      if (RecipeDuration == null) {
        break missingId;
      }

      id = R.id.RecipeImage;
      ImageView RecipeImage = rootView.findViewById(id);
      if (RecipeImage == null) {
        break missingId;
      }

      id = R.id.RecipeName;
      TextView RecipeName = rootView.findViewById(id);
      if (RecipeName == null) {
        break missingId;
      }

      id = R.id.cardView;
      CardView cardView = rootView.findViewById(id);
      if (cardView == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = rootView.findViewById(id);
      if (imageView == null) {
        break missingId;
      }

      return new RecipeItemBinding((RelativeLayout) rootView, RecipeCourse, RecipeDuration,
          RecipeImage, RecipeName, cardView, imageView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
